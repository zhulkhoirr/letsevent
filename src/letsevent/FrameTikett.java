/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package letsevent;

/**
 *
 * @author HP Pc
 */
import com.mysql.jdbc.Connection;
import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class FrameTikett extends javax.swing.JFrame {

   private String idPassEvent;
    private String idPassPendaftaran;
    public boolean databaru;
    private Connection con;
    private PreparedStatement ps;
    private Statement st;
    private ResultSet rs;
    private String tipe;
    
    public FrameTikett() {
        initComponents();
        getNama();
        getData();
        databaru=true;
    }

    public void setIdEvent(String idEvent) {
        this.idPassEvent = idEvent;
                
        // Isi nilai ID ke textfield
        txtIdEvent.setText(String.valueOf(idEvent));
    }
    
    public void setIdPendaftaran(String idPendaftaran) {
        this.idPassPendaftaran = idPendaftaran;
                
        // Isi nilai ID ke textfield
        txtIdPendaftaran.setText(String.valueOf(idPendaftaran));
        
    }
    
    //mengambil data 
    public void getNama() 
    {
        // menampilkan data dari database
        try {
            con = (Connection) Koneksi.getKoneksi();
            st = con.createStatement();
            rs = st.executeQuery("SELECT nama_peserta FROM pendaftaran WHERE id_pendaftaran = '"+idPassPendaftaran+"'");
            if(rs.next()) {
                String namaPeserta = rs.getString("nama_peserta");
                txtNama.setText(namaPeserta);
            } else {

            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    private void getData() 
    {
        // menampilkan data dari database
        try {
            con = (Connection) Koneksi.getKoneksi();
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM tiket WHERE id_pendaftaran = '"+idPassPendaftaran+"'");
            if(rs.next()) {
                String kodeTiket = rs.getString("kode_tiket");
                txtKode.setText(kodeTiket);
                
                String tipe = rs.getString("jenis_tiket");
                if(tipe.equals("VIP")){
                    rdbVip.setSelected(true);
                }
                else if(tipe.equals("Reguler")){
                    rdbReguler.setSelected(true);
                }
                
                String hargaTiket = rs.getString("harga_tiket");
                txtHarga.setText(hargaTiket);
            } else {

            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    public void getDataTiket() 
    {
        // menampilkan data dari database
        try {
            con = (Connection) Koneksi.getKoneksi();
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM tiket WHERE id_pendaftaran = '"+idPassPendaftaran+"'");
            if(rs.next()) {
                String kodeTiket = rs.getString("kode_tiket");
                txtKode.setText(kodeTiket);
                
                String tipe = rs.getString("jenis_tiket");
                if(tipe.equals("VIP")){
                    rdbVip.setSelected(true);
                }
                else if(tipe.equals("Reguler")){
                    rdbReguler.setSelected(true);
                }
                
                String hargaTiket = rs.getString("harga_tiket");
                txtHarga.setText(hargaTiket);
            } else {

            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtIdEvent = new javax.swing.JTextField();
        txtIdPendaftaran = new javax.swing.JTextField();
        txtIdTiket = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtKode = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        btnRandom = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnEmail = new javax.swing.JButton();
        rdbVip = new javax.swing.JRadioButton();
        rdbReguler = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNama.setEditable(false);
        getContentPane().add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 325, 328, 29));

        txtKode.setEditable(false);
        getContentPane().add(txtKode, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 370, 328, 29));
        getContentPane().add(txtHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 455, 328, 29));

        btnRandom.setText("Generate");
        btnRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRandomActionPerformed(evt);
            }
        });
        getContentPane().add(btnRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 370, 99, 29));

        btnSimpan.setText("Save/Update");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(571, 497, 99, 29));

        btnEmail.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnEmail.setForeground(new java.awt.Color(0, 255, 0));
        btnEmail.setText("Send to Email");
        btnEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmailActionPerformed(evt);
            }
        });
        getContentPane().add(btnEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(844, 560, 147, 59));

        rdbVip.setText("VIP");
        rdbVip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbVipActionPerformed(evt);
            }
        });
        getContentPane().add(rdbVip, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 419, -1, -1));

        rdbReguler.setText("Reguler");
        getContentPane().add(rdbReguler, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 419, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/letsevent/icon _arrow left circled_.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 80, 80));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/letsevent/tiketttt.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRandomActionPerformed
        // TODO add your handling code here:
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        String randomString = "";
        int length = 6; // panjang karakter yang ingin digenerate

        // generate string secara acak
        for(int i = 0; i < length; i++) {
            int index = (int)(Math.random() * characters.length());
            randomString += characters.charAt(index);
        }

        // menampilkan string yang di-generate
        txtKode.setText(randomString);
    }//GEN-LAST:event_btnRandomActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:

        if(rdbVip.isSelected()){
            tipe = "VIP";
        }
        else if (rdbReguler.isSelected()){
            tipe = "Reguler";
        }

        String idTiket = txtIdTiket.getText();
        String idPendaftaran = txtIdPendaftaran.getText();
        String kodeTiket = txtKode.getText();
        String hargaTiket = txtHarga.getText();

        if (databaru == true) { // prosess simpan atau edit
            try
            {
                String sql = "INSERT INTO tiket(kode_tiket, jenis_tiket, harga_tiket, id_pendaftaran) VALUES (?, ?, ?, ?)";
                con = (Connection) Koneksi.getKoneksi();
                ps = con.prepareStatement(sql);
                ps.setString(1, kodeTiket);
                ps.setString(2, tipe);
                ps.setString(3, hargaTiket);
                ps.setString(4, idPendaftaran);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data berhasil didaftarkan");

                databaru = false;
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
        else {
            try
            {
                String sql = "UPDATE tiket SET kode_tiket=?, jenis_tiket=?, harga_tiket=? WHERE id_tiket=?";
                con = (Connection) Koneksi.getKoneksi();
                ps = con.prepareStatement(sql);
                ps.setString(1, kodeTiket);
                ps.setString(2, tipe);
                ps.setString(3, hargaTiket);
                ps.setString(4, idTiket);
                ps.execute();
                JOptionPane.showMessageDialog(this, "Data berhasil diubah");
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
        getData();

    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmailActionPerformed
        // TODO add your handling code here:
        String idEvent = txtIdEvent.getText();
        String idPendaftaran = txtIdPendaftaran.getText();
        String namaEvent = null, tanggalEvent = null, lokasiEvent = null, namaPeserta = null, noTelp = null, email = null, tanggalPendaftaran = null, kodeTiket = null, jenisTiket = null, hargaTiket = null;
        try{
            con = (Connection) Koneksi.getKoneksi();
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM event WHERE id_event = '"+idEvent+"'");
            if(rs.next()) {
                namaEvent = rs.getString("nama_event");
                tanggalEvent = rs.getString("tanggal_event");
                lokasiEvent = rs.getString("lokasi_event");
            }

        }
        catch(SQLException e){

        }

        try{
            con = (Connection) Koneksi.getKoneksi();
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM pendaftaran WHERE id_pendaftaran = '"+idPendaftaran+"'");
            if(rs.next()) {
                namaPeserta = rs.getString("nama_peserta");
                noTelp = rs.getString("no_telp");
                email = rs.getString("email");
                tanggalPendaftaran = rs.getString("tanggal_pendaftaran");
            }

        }
        catch(SQLException e){

        }

        try {
            con = (Connection) Koneksi.getKoneksi();
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM tiket WHERE id_pendaftaran = '"+idPassPendaftaran+"'");
            if(rs.next()) {
                kodeTiket = rs.getString("kode_tiket");
                jenisTiket = rs.getString("jenis_tiket");
                hargaTiket = rs.getString("harga_tiket");
            } else {

            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

        String penerima = email;
        String subjek = "Kode Tiket Event "+ namaEvent;
        String isiPesan = "Dear " + namaPeserta + ",\n\n" +
        "Thank you for purchasing a ticket to the " + namaEvent + ".\n" +
        "We are delighted to have you as our guest!\n\n" +
        "Event Details:\n" +
        "Event Name: " + namaEvent + "\n" +
        "Location: " + lokasiEvent + "\n" +
        "Date: " + tanggalEvent + "\n\n" +
        "Ticket Information:\n" +
        "Ticket Code: " + kodeTiket + "\n" +
        "Ticket Type: " + jenisTiket + "\n" +
        "Ticket Price: Rp" + hargaTiket + "\n\n" +
        "Please save this email as proof of purchase and bring it along with you on the event day.\n" +
        "If you have any questions or need further assistance, feel free to contact us via email at emailkuliahrifat@gmail.com or call us at 085345880883.\n\n" +
        "We look forward to seeing you at the event!\n\n" +
        "Best regards,\n" +
        "Event Organizer";

        // Konfigurasi properti
        Properties properti = new Properties();
        properti.put("mail.smtp.auth", "true");
        properti.put("mail.smtp.starttls.enable", "true");
        properti.put("mail.smtp.host", "smtp.gmail.com");
        properti.put("mail.smtp.port", "587");

        // Informasi akun email pengirim
        String pengirim = "emailkuliahrifat@gmail.com";
        String kataSandi = "dkfbykfnqrzepzot";

        // Membuat sesi autentikasi
        Session sesi = Session.getInstance(properti, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(pengirim, kataSandi);
            }
        });

        try {
            // Membuat pesan email
            Message pesan = new MimeMessage(sesi);
            pesan.setFrom(new InternetAddress(pengirim));
            pesan.setRecipients(Message.RecipientType.TO, InternetAddress.parse(penerima));
            pesan.setSubject(subjek);
            pesan.setText(isiPesan);

            // Mengirim pesan email
            Transport.send(pesan);

            JOptionPane.showMessageDialog(this, "Email has been sent!");
        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEmailActionPerformed

    private void rdbVipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbVipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbVipActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        // Ambil nilai ID yang ingin Anda lewatkan
        String idPassEvent = txtIdEvent.getText();
        
        // sembunyikan frame pendaftaram
        this.setVisible(false);

        // Buat instance dari frame Tiket
        FramePendaftarann framePendaftarann = new FramePendaftarann();

        // Panggil method di frame Pendaftaran untuk mengatur nilai ID
        framePendaftarann.setIdEvent(idPassEvent);
        
        framePendaftarann.getDataMasuk();

        // Tampilkan frame Pendaftaran
        framePendaftarann.setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameTikett.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameTikett.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameTikett.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameTikett.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameTikett().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEmail;
    private javax.swing.JButton btnRandom;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton rdbReguler;
    private javax.swing.JRadioButton rdbVip;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtIdEvent;
    private javax.swing.JTextField txtIdPendaftaran;
    private javax.swing.JTextField txtIdTiket;
    private javax.swing.JTextField txtKode;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables
}
